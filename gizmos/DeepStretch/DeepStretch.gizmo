set cut_paste_input [stack 0]
version 11.1 v2
push $cut_paste_input
Group {
 name DeepStretch
 help "A tool to stretch the distance between the front and back samples."
 tile_color 0x966ff
 selected true
 xpos -105
 ypos -1345
 addUserKnob {20 DeepStretch}
 addUserKnob {41 stretch_offset T DeepExpression4.stretch_offset}
 addUserKnob {41 midpoint_weight T DeepExpression4.midpoint_weight}
 addUserKnob {41 uniform_stretch T DeepExpression4.uniform_stretch}
 addUserKnob {41 alpha_mult T DeepExpression4.alpha_mult}
}
 Input {
  inputs 0
  name Input1
  xpos 527
  ypos -603
 }
 DeepExpression {
  temp_name0 offset
  temp_expr0 "\[value stretch_offset]"
  temp_name1 alphaOffset
  temp_expr1 "\[value alpha_offset] ? 1 : rgba.alpha"
  temp_name2 frontVal
  temp_expr2 "\[value midpoint_weight]"
  temp_name3 backVal
  temp_expr3 "1 - \[value midpoint_weight]"
  chans1 deep
  rgba.alpha "rgba.alpha * \[value alpha_mult]"
  deep.front "deep.front - ((offset * frontVal) * alphaOffset)"
  deep.back "deep.back + ((offset * backVal) * alphaOffset)"
  name DeepExpression4
  selected true
  xpos 527
  ypos -535
  addUserKnob {20 User}
  addUserKnob {7 stretch_offset t "Maximum offset value to separate the deep.front and deep.back by."}
  stretch_offset 4
  addUserKnob {7 midpoint_weight t "Sets weighting between front and back expansion. 0 would place entire offset on deep.back. 1 would place entire offset on deep.front."}
  midpoint_weight 0.5
  addUserKnob {6 uniform_stretch t "Don't multiply the offset value by the alpha. Performs an even expansion across all pixels." +STARTLINE}
  addUserKnob {7 alpha_offset}
  alpha_offset {{uniform_stretch}}
  addUserKnob {7 alpha_mult t "Mult the alpha by this amount to prevent opaque pixels where the alpha = 1"}
  alpha_mult 0.999
 }
 Output {
  name Output1
  xpos 527
  ypos -463
 }
end_group
